# This GitHub action can publish assets for release when a tag is created.
# Currently its setup to run on any tag that matches the pattern "v*" (ie. v0.1.0).
#
# This uses an action (hashicorp/ghaction-import-gpg) that assumes you set your 
# private key in the `GPG_PRIVATE_KEY` secret and passphrase in the `PASSPHRASE`
# secret. If you would rather own your own GPG handling, please fork this action
# or use an alternative one for key handling.
#
# You will need to pass the `--batch` flag to `gpg` in your signing step 
# in `goreleaser` to indicate this is being used in a non-interactive mode.
#
name: release
on:
  push:
    tags:
      - 'v*'
env:
  GOPRIVATE: "github.com/RafaySystems"
jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2.3.4
      -
        name: Unshallow
        run: git fetch --prune --unshallow
      -
        name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version-file: 'go.mod'
      - name: Granting private modules access
        env:
          TOKEN: ${{ secrets.RCTL_GO_MODULES_TOKEN }}
        #run: |
        #  git config --global url."https://${{ secrets.RCTL_GO_MODULES_TOKEN }}:x-oauth-basic@github.com/RafaySystems".insteadOf "https://github.com/RafaySystems"
        run: git config --global url."https://stephan-rafay:${TOKEN}@github.com".insteadOf "https://github.com"
      -
        name: Import GPG key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
      -
        name: Extract Release Notes from CHANGELOG
        run: |
          # Extract version from tag (remove 'v' prefix if present)
          VERSION=$(echo "${{ github.ref_name }}" | sed 's/^v//')
          echo "Extracting release notes for version ${VERSION}"
          
          # Make script executable and extract release notes
          chmod +x scripts/extract-release-notes.sh
          bash scripts/extract-release-notes.sh "${VERSION}" CHANGELOG.md > release-notes.md
          
          # Show extracted notes for debugging
          echo "--- Release Notes ---"
          cat release-notes.md
          echo "--------------------"
      -
        name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2.5.0
        with:
          version: v1.26.1
          args: release --rm-dist -p 2 --timeout 15m --release-notes=release-notes.md
        env:
          GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}
          # GitHub sets this automatically
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
